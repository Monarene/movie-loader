def imageName = 'mlabouardy/movies-loader'
def myimageName = 'monarene/movie-loader'

pipeline {
    agent any 

    stages{
        stage('Checkout'){
            steps{
                checkout scm
            }
        }

        stage('Unit Tests'){
            steps{
                script {
                    def imageTest= docker.build("${imageName}-test", "-f Dockerfile.test .")
                    sh "docker run --rm -v $PWD/reports:/app/reports ${imageName}-test"
            junit "reports/*.xml"
                    }
                }
            }

        stage('Build'){
            steps{
                script {
                    dockerImage = docker.build(myimageName)
                }
            }
        }


        stage('Push'){

            steps{
                script {

                    withDockerRegistry([credentialsId: "dockerhub", url: "" ]) {
                    dockerImage.push(commitID())
                    if (env.BRANCH_NAME == 'develop') {
                    dockerImage.push('develop')
                }
            
            }

        }
    }
               
    }

    }

    }

def commitID() {
    sh 'git rev-parse HEAD > .git/commitID'
    def commitID = readFile('.git/commitID').trim()
    sh 'rm .git/commitID'
    commitID
}

